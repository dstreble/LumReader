TL.wavelength <- seq(200,1000,10)
TL.temperatures <- seq(0,800,10)
# TL peak
TL.peak.x <- dnorm(TL.wavelength,300,20)
TL.peak.x <- rep(TL.peak.x,each=length(TL.temperatures))
TL.peak.x <- TL.peak.x/max(TL.peak.x)
TL.peak.y <- dnorm(TL.temperatures,400,10)
TL.peak.y <- rep(TL.peak.y,times=length(TL.wavelength))
TL.peak.y <- TL.peak.y/max(TL.peak.y)
TL.signal <- TL.peak.x*TL.peak.y
TL <- matrix(data=c(rep(TL.wavelength,
each=length(TL.temperatures)),
rep(TL.temperatures,
times=length(TL.wavelength)),
TL.signal),
nrow = length(TL.signal),
ncol = 3,
byrow = FALSE)
# OSL
description.OSL <- "example"
OSL.wavelength <- seq(200,1000,10)
OSL.color <- seq(200,1000,10)
OSL.peak.x <- dnorm(OSL.wavelength,300,100)
OSL.peak.x <- rep(OSL.peak.x,each=length(OSL.color))
OSL.peak.x <- OSL.peak.x/max(OSL.peak.x)
OSL.peak.y <- dnorm(OSL.color,500,50)
OSL.peak.y <- rep(OSL.peak.y,times=length(OSL.wavelength))
OSL.peak.y <- OSL.peak.y/max(OSL.peak.y)
OSL.signal <- OSL.peak.x*OSL.peak.y
OSL <- matrix(data=c(rep(OSL.wavelength,
each=length(OSL.color)),
rep(OSL.color,
times=length(OSL.wavelength)),
OSL.signal),
nrow = length(OSL.signal),
ncol = 3,
byrow = FALSE)
# Material
material <- create_Material(name = name,
description.TL = description.TL,
TL = TL,
description.OSL = description.OSL,
OSL = OSL)
plot_Material(material)
#Data
name <- "example"
# TL
description.TL <- "example"
TL.wavelength <- seq(200,1000,10)
TL.temperatures <- seq(0,800,10)
# TL peak
TL.peak.x <- dnorm(TL.wavelength,300,100)
TL.peak.x <- rep(TL.peak.x,each=length(TL.temperatures))
TL.peak.x <- TL.peak.x/max(TL.peak.x)
TL.peak.y <- dnorm(TL.temperatures,400,100)
TL.peak.y <- rep(TL.peak.y,times=length(TL.wavelength))
TL.peak.y <- TL.peak.y/max(TL.peak.y)
TL.signal <- TL.peak.x*TL.peak.y
TL <- matrix(data=c(rep(TL.wavelength,
each=length(TL.temperatures)),
rep(TL.temperatures,
times=length(TL.wavelength)),
TL.signal),
nrow = length(TL.signal),
ncol = 3,
byrow = FALSE)
# OSL
description.OSL <- "example"
OSL.wavelength <- seq(200,1000,10)
OSL.color <- seq(200,1000,10)
OSL.peak.x <- dnorm(OSL.wavelength,300,100)
OSL.peak.x <- rep(OSL.peak.x,each=length(OSL.color))
OSL.peak.x <- OSL.peak.x/max(OSL.peak.x)
OSL.peak.y <- dnorm(OSL.color,500,50)
OSL.peak.y <- rep(OSL.peak.y,times=length(OSL.wavelength))
OSL.peak.y <- OSL.peak.y/max(OSL.peak.y)
OSL.signal <- OSL.peak.x*OSL.peak.y
OSL <- matrix(data=c(rep(OSL.wavelength,
each=length(OSL.color)),
rep(OSL.color,
times=length(OSL.wavelength)),
OSL.signal),
nrow = length(OSL.signal),
ncol = 3,
byrow = FALSE)
# Material
material <- create_Material(name = name,
description.TL = description.TL,
TL = TL,
description.OSL = description.OSL,
OSL = OSL)
plot_Material(material)
library(LumReader)
#Data
name <- "example"
# TL
description.TL <- "example"
TL.wavelength <- seq(200,1000,10)
TL.temperatures <- seq(0,800,10)
# TL peak
TL.peak.x <- dnorm(TL.wavelength,500,200)
TL.peak.x <- rep(TL.peak.x,each=length(TL.temperatures))
TL.peak.x <- TL.peak.x/max(TL.peak.x)
TL.peak.y <- dnorm(TL.temperatures,400,25)
TL.peak.y <- rep(TL.peak.y,times=length(TL.wavelength))
TL.peak.y <- TL.peak.y/max(TL.peak.y)
TL.signal <- TL.peak.x*TL.peak.y
TL <- matrix(data=c(rep(TL.wavelength,
each=length(TL.temperatures)),
rep(TL.temperatures,
times=length(TL.wavelength)),
TL.signal),
nrow = length(TL.signal),
ncol = 3,
byrow = FALSE)
# OSL
description.OSL <- "example"
OSL.wavelength <- seq(200,1000,10)
OSL.color <- seq(200,1000,10)
OSL.peak.x <- dnorm(OSL.wavelength,300,100)
OSL.peak.x <- rep(OSL.peak.x,each=length(OSL.color))
OSL.peak.x <- OSL.peak.x/max(OSL.peak.x)
OSL.peak.y <- dnorm(OSL.color,500,50)
OSL.peak.y <- rep(OSL.peak.y,times=length(OSL.wavelength))
OSL.peak.y <- OSL.peak.y/max(OSL.peak.y)
OSL.signal <- OSL.peak.x*OSL.peak.y
OSL <- matrix(data=c(rep(OSL.wavelength,
each=length(OSL.color)),
rep(OSL.color,
times=length(OSL.wavelength)),
OSL.signal),
nrow = length(OSL.signal),
ncol = 3,
byrow = FALSE)
# Material
material <- create_Material(name = name,
description.TL = description.TL,
TL = TL,
description.OSL = description.OSL,
OSL = OSL)
plot_Material(material)
#Data
name <- "example"
# TL
description.TL <- "example"
TL.wavelength <- seq(200,1000,10)
TL.temperatures <- seq(0,800,10)
# TL peak
TL.peak.x <- dnorm(TL.wavelength,500,50)
TL.peak.x <- rep(TL.peak.x,each=length(TL.temperatures))
TL.peak.x <- TL.peak.x/max(TL.peak.x)
TL.peak.y <- dnorm(TL.temperatures,400,25)
TL.peak.y <- rep(TL.peak.y,times=length(TL.wavelength))
TL.peak.y <- TL.peak.y/max(TL.peak.y)
TL.signal <- TL.peak.x*TL.peak.y
TL <- matrix(data=c(rep(TL.wavelength,
each=length(TL.temperatures)),
rep(TL.temperatures,
times=length(TL.wavelength)),
TL.signal),
nrow = length(TL.signal),
ncol = 3,
byrow = FALSE)
# OSL
description.OSL <- "example"
OSL.wavelength <- seq(200,1000,10)
OSL.color <- seq(200,1000,10)
OSL.peak.x <- dnorm(OSL.wavelength,300,100)
OSL.peak.x <- rep(OSL.peak.x,each=length(OSL.color))
OSL.peak.x <- OSL.peak.x/max(OSL.peak.x)
OSL.peak.y <- dnorm(OSL.color,500,50)
OSL.peak.y <- rep(OSL.peak.y,times=length(OSL.wavelength))
OSL.peak.y <- OSL.peak.y/max(OSL.peak.y)
OSL.signal <- OSL.peak.x*OSL.peak.y
OSL <- matrix(data=c(rep(OSL.wavelength,
each=length(OSL.color)),
rep(OSL.color,
times=length(OSL.wavelength)),
OSL.signal),
nrow = length(OSL.signal),
ncol = 3,
byrow = FALSE)
# Material
material <- create_Material(name = name,
description.TL = description.TL,
TL = TL,
description.OSL = description.OSL,
OSL = OSL)
plot_Material(material)
#Data
name <- "example"
# TL
description.TL <- "example"
TL.wavelength <- seq(200,1000,10)
TL.temperatures <- seq(0,800,10)
# TL peak
TL.peak.x <- dnorm(TL.wavelength,400,50)
TL.peak.x <- rep(TL.peak.x,each=length(TL.temperatures))
TL.peak.x <- TL.peak.x/max(TL.peak.x)
TL.peak.y <- dnorm(TL.temperatures,400,25)
TL.peak.y <- rep(TL.peak.y,times=length(TL.wavelength))
TL.peak.y <- TL.peak.y/max(TL.peak.y)
TL.signal <- TL.peak.x*TL.peak.y
TL <- matrix(data=c(rep(TL.wavelength,
each=length(TL.temperatures)),
rep(TL.temperatures,
times=length(TL.wavelength)),
TL.signal),
nrow = length(TL.signal),
ncol = 3,
byrow = FALSE)
# OSL
description.OSL <- "example"
OSL.wavelength <- seq(200,1000,10)
OSL.color <- seq(200,1000,10)
OSL.peak.x <- dnorm(OSL.wavelength,300,100)
OSL.peak.x <- rep(OSL.peak.x,each=length(OSL.color))
OSL.peak.x <- OSL.peak.x/max(OSL.peak.x)
OSL.peak.y <- dnorm(OSL.color,500,50)
OSL.peak.y <- rep(OSL.peak.y,times=length(OSL.wavelength))
OSL.peak.y <- OSL.peak.y/max(OSL.peak.y)
OSL.signal <- OSL.peak.x*OSL.peak.y
OSL <- matrix(data=c(rep(OSL.wavelength,
each=length(OSL.color)),
rep(OSL.color,
times=length(OSL.wavelength)),
OSL.signal),
nrow = length(OSL.signal),
ncol = 3,
byrow = FALSE)
# Material
material <- create_Material(name = name,
description.TL = description.TL,
TL = TL,
description.OSL = description.OSL,
OSL = OSL)
plot_Material(material)
name <- "example"
description.TL <- "example"
description.OSL <- "example"
# TL
TL.wavelength <- seq(200,1000,10)
TL.temperatures <- seq(0,800,10)
# TL peak
TL.peak.x <- dnorm(TL.wavelength,400,50)
TL.peak.x <- rep(TL.peak.x,each=length(TL.temperatures))
TL.peak.x <- TL.peak.x/max(TL.peak.x)
TL.peak.y <- dnorm(TL.temperatures,400,25)
TL.peak.y <- rep(TL.peak.y,times=length(TL.wavelength))
TL.peak.y <- TL.peak.y/max(TL.peak.y)
TL.signal <- TL.peak.x*TL.peak.y
TL <- matrix(data=c(rep(TL.wavelength,
each=length(TL.temperatures)),
rep(TL.temperatures,
times=length(TL.wavelength)),
TL.signal),
nrow = length(TL.signal),
ncol = 3,
byrow = FALSE)
# OSL
OSL.wavelength <- seq(100,1200,10)
OSL.color <- seq(200,1000,10)
OSL.peak.x <- dnorm(OSL.wavelength,300,100)
OSL.peak.x <- rep(OSL.peak.x,each=length(OSL.color))
OSL.peak.x <- OSL.peak.x/max(OSL.peak.x)
OSL.peak.y <- dnorm(OSL.color,500,50)
OSL.peak.y <- rep(OSL.peak.y,times=length(OSL.wavelength))
OSL.peak.y <- OSL.peak.y/max(OSL.peak.y)
OSL.signal <- OSL.peak.x*OSL.peak.y
OSL <- matrix(data=c(rep(OSL.wavelength,
each=length(OSL.color)),
rep(OSL.color,
times=length(OSL.wavelength)),
OSL.signal),
nrow = length(OSL.signal),
ncol = 3,
byrow = FALSE)
# Material
#
material <- create_Material(name = name,
description.TL = description.TL,
TL = TL,
description.OSL = description.OSL,
OSL = OSL)
export_Material(object = material,
file.name = name)
plot_Material(material)
library(LumReader)
# Data
name <- "example"
description <- "non realistic PMT"
wavelength <- seq(200,1000,10)
values <- dnorm(x = wavelength,mean = 300,sd = 150)
values <- values/max(values)
efficiency <- matrix(data=c(wavelength,
values),
nrow = 81,
ncol = 2,
byrow = FALSE)
#PMT
PMT <- create_PMT(name = name,
description = description,
efficiency = efficiency)
plot_PMT(PMT)
library(LumReader)
# Data
name <- 'example'
description <- 'example'
# Create reader components
filter <- default_Filters('example')
filterStack <- create_FilterStack(name, description, list(filter))
stimulation <- default_Stimulation('example')
PMT <- default_PMT('example')
reader <- create_Reader(name, description, stimulation, filterStack, PMT)
plot_Reader(reader)
library(LumReader)
# Data
name <- 'example'
description <- 'example'
# Create reader components
filter <- default_Filters('example')
filterStack <- create_FilterStack(name, description, filter)
stimulation <- default_Stimulation('example')
PMT <- default_PMT('example')
reader <- create_Reader(name, description, stimulation, filterStack, PMT)
plot_Reader(reader)
library(LumReader)
# Data
name <- "example"
description <- "non realistic stimulation"
wavelength <- seq(200,1000,10)
values <- dnorm(x = wavelength,mean = 500,sd = 25)
values <- values/max(values)
emission <- matrix(data=c(wavelength,
values),
nrow = 81,
ncol = 2,
byrow = FALSE)
stimulation <- create_Stimulation(name = name,
description = description,
type = 'OSL',
emission = emission)
plot_Stimulation(stimulation)
library(LumReader)
filters <- default_Filter('example')
plot_Filter(filters[[1]])
library(LumReader)
filters <- default_Filters('example')
plot_Filter(filters[[1]])
library(LumReader)
filters <- default_Filters('example', 'example2')
plot_Filter(filters[[1]])
library(LumReader)
filters <- default_Filters(c('example', 'example2'))
plot_Filter(filters[[1]])
material <- default_Material('example')
plot_Material(material)
library(LumReader)
PMT <- default_PMT('example')
plot_PMT(PMT)
library(LumReader)
stimulation <- default_Stimulation('example')
plot_Stimulation(stimulation)
setwd("~/R/LumReader")
setwd("~/R/filters")
library(LumReader)
filter <- default_Filter(example)
file.name <- 'example'
export_Filter(filter, file.name)
filter <- default_Filter(example)[[1]]
file.name <- 'example'
export_Filter(filter, file.name)
filter <- default_Filter(example)[[1]]
filter <- default_Filters(example)[[1]]
filter <- default_Filters('example')[[1]]
library(LumReader)
filter <- default_Filters('example')[[1]]
file.name <- 'example'
export_Filter(filter, file.name)
getwd()
library(LumReader)
filter <- default_Filters('example')[[1]]
file.name <- paste(getwd(), '/example', sep ='')
export_Filter(filter, file.name)
#There is now a example.FLT file in the 'working directory'.
print(file.name)
library(LumReader)
filter <- default_Filters('example')[[1]]
file.name <- paste(getwd(), '/example', sep ='')
export_Filter(filter, file.name)
#There is now a example.FLT file in the 'working directory'.
print(file.name)
print(paste(file.name,'.FLT', sep=""))
library(LumReader)
filter <- default_Filters('example')[[1]]
file.name <- 'example'
export_Filter(filter, file.name)
# There is now a 'example.FLT' file in the 'working directory'.
# This file is a classical .txt file despite the extension.
file <- paste(getwd(),'/', file.name,'.FLT', sep="")
print(file)
read('C:/Users/admin/Documents/R/filters/example.FLT')
read.table('C:/Users/admin/Documents/R/filters/example.FLT')
readline('C:/Users/admin/Documents/R/filters/example.FLT')
readline('C:/Users/admin/Documents/R/filters/example.FLT')
readLines('C:/Users/admin/Documents/R/filters/example.FLT')
print(readLines('C:/Users/admin/Documents/R/filters/example.FLT'))
print(unlist(readLines('C:/Users/admin/Documents/R/filters/example.FLT')))
library(LumReader)
filter <- default_Filters('example')[[1]]
file.name <- 'example'
export_Filter(filter, file.name)
# There is now a 'example.FLT' file in the 'working directory'.
# This file is a classical .txt file despite the extension.
file <- paste(getwd(),'/', file.name,'.FLT', sep="")
print(file)
readLines(file)
library(LumReader)
material <- default_Material('example')
file.name <- 'example'
export_Material(material, file.name)
# There is now an 'example.TL' and an 'example.OSL' file in the 'working directory'.
# These file are classical .txt files despite the extensions.
file <- paste(getwd(),'/', file.name,'.TL', sep="")
print(file)
readLines(file)
file <- paste(getwd(),'/', file.name,'.OSL', sep="")
print(file)
readLines(file)
library(LumReader)
PMT <- default_PMT('example')
file.name <- 'example'
export_PMT(PMT, file.name)
# There is now an 'example.PMT' file in the 'working directory'.
# This file is a classical .txt file despite the extension.
file <- paste(getwd(),'/', file.name,'.PMT', sep="")
print(file)
readLines(file)
library(LumReader)
example <- default_Stimulation('example')
file.name <- 'example'
export_Stimulation(example, file.name)
# There is now an 'example.EXI' file in the 'working directory'.
# This file is a classical .txt file despite the extension.
file <- paste(getwd(),'/', file.name,'.EXI', sep="")
print(file)
readLines(file)
getwd()
dir(system.file("extdata", package="LumReader"))
system.file("extdata", package="LumReader")
library(LumReader)
folder <- system.file("extdata", package="LumReader")
file.name <- 'example'
file <-paste(folder, '/', file.name, sep="")
example <- import_Filter(file)
plot_Filter(example)
library(LumReader)
library(LumReader)
folder <- system.file("extdata", package="LumReader")
file.name <- 'example' # !!! no extension !!! #
file <-paste(folder, '/', file.name, sep="")
example <- import_Material(file)
plot_Material(example)
library(LumReader)
library(LumReader)
folder <- system.file("extdata", package="LumReader")
file.name <- 'example' # !!! no extension !!! #
file <-paste(folder, '/', file.name, sep="")
example <- import_PMT(file)
plot_PMT(example)
library(LumReader)
folder <- system.file("extdata", package="LumReader")
file.name <- 'example' # !!! no extension !!! #
file <-paste(folder, '/', file.name, sep="")
example <- import_Stimulation(file)
plot_Stimulation(example)
library(LumReader)
library(LumReader)
runExample()
runExamples()
devtools::run_examples(pkg = 'LumReader')
devtools::run_examples(pkg = 'LumReader')
library(LumReader)
devtools::run_examples(pkg = 'LumReader')
library(LumReader)
#Create filterStack
name <- "example"
description <- "non realistic filterStack"
filters <- default_Filters(c('example','example2')
filterStack <- create_FilterStack(name, description, filters)
plot_FilterStack(filterStack)
#add_Filter
filterStack <- remove_Filter(filterStack, filters[[1]])
plot_FilterStack(filterStack)
#Create filterStack
name <- "example"
description <- "non realistic filterStack"
filters <- default_Filters(c('example','example2'))
filterStack <- create_FilterStack(name, description, filters)
plot_FilterStack(filterStack)
#add_Filter
filterStack <- remove_Filter(filterStack, filters[[1]])
plot_FilterStack(filterStack)
library(LumReader)
library(LumReader)
library(LumReader)
library(LumReader)
library(LumReader)
library(LumReader)
library(LumReader)
library(LumReader)
library(LumReader)
